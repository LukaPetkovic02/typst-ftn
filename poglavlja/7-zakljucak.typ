= Закључак
<zakljucak>

== Ретроспектива

У овом раду реализована је и анализирана симулација двоструког клатна у три програмска језика: _Python_, _Rust_ и _Go_. 
Циљ је био да се пореде њихове перформансе, скалабилност и читљивост кода, као и да се испита ефикасност примене 
методе Рунге–Кута четвртог реда (RK4) у различитим извршним окружењима.

Резултати експеримената показали су следеће разлике између језика:

- _Python_ је најједноставнији за имплементацију и најчитљивији по синтакси, али има изражена ограничења у перформансама због интерпретираног окружења и _Global Interpreter Lock (GIL)_ механизма. Ипак, коришћењем `multiprocessing` библиотеке постиже се умерено јако и слабо скалирање, што га чини погодним за мање симулације и брз развој прототипа.

- _Rust_ се показао као најбржи у погледу времена извршавања - реда милисекунди наспрам реда секунди код Python-a, али у нашем случају није постигао ефективно јако скалирање. Стабилност резултата и стандардне девијације и строга контрола меморије потврђују да је _Rust_ одличан избор за прецизне, детерминистичке научне симулације.

- _Go_ је показао најбољи однос једноставности и перформанси. Његов модел конкурентности заснован на горутинама омогућио је скоро идеално јако и слабо скалирање до осам процеса, са стабилним временом извршавања и минималним _overhead_-ом. Код је прегледан, кратак и лако проширив, што чини овај језик веома практичним избором за паралелне симулације овог типа.

Поред анализе скалирања, посвећена је и пажња визуелизацији резултата. У _Rust_-у су реализовани модули за генерисање
графичких приказа и анимација који приказују кретање клатна у реалном времену, са очувањем укупне енергије система и 
визуелним ефектима који илуструју хаотичну природу кретања.

Овим радом потврђено је да избор програмског језика зависи од приоритета — 
брзине развоја, стабилности или максималне перформансе — али да се у свим случајевима 
може постићи физички исправна и енергетски стабилна симулација сложених динамичких система.

== Будући рад

Иако је симулација двоструког клатна успешно реализована и анализирана у оквиру овог рада, 
постоји више праваца у којима би се пројекат могао даље унапредити:

- *Већи скуп симулација* – извршавање стотина или хиљада независних симулација ради 
  статистичке анализе хаотичког понашања и визуелизације фазног простора.

- *GPU акцелерација* – имплементација нумеричких интеграција на графичком процесору (_CUDA_ или _OpenCL_) 
  ради постизања вишеструког убрзања при већем броју паралелних трајекторија.

- *Веб интерфејс* – интеграција резултата симулација у веб апликацији (нпр. помоћу _WebAssembly_ или _WebGL_), 
  што би омогућило интерактивно покретање и визуелизацију клатна преко прегледача (нпр. @myphysicslab2025).

- *Интерактивна 3D визуелизација* – проширење _Rust_ или _Go_ модула помоћу _OpenGL/Vulkan_ библиотека 
  за приказ кретања у тродимензионалном простору са контролом углова и зумирањем у реалном времену.